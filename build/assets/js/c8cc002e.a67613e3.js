"use strict";(self.webpackChunklarf_site=self.webpackChunklarf_site||[]).push([[2167],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>g});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),y=a,g=p["".concat(l,".").concat(y)]||p[y]||d[y]||o;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=y;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},533:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=t(8168),a=(t(6540),t(5680));const o={sidebar_position:12},i="Runner",s={unversionedId:"toolkit/runner",id:"toolkit/runner",title:"Runner",description:"Runner",source:"@site/docs/toolkit/runner.md",sourceDirName:"toolkit",slug:"/toolkit/runner",permalink:"/docs/toolkit/runner",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/toolkit/runner.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"tutorialSidebar",previous:{title:"Code Block Style",permalink:"/docs/toolkit/code-blocks"},next:{title:"Getting Started",permalink:"/docs/tutorial/getting-started"}},l={},u=[],c={toc:u},p="wrapper";function d(e){let{components:n,...o}=e;return(0,a.yg)(p,(0,r.A)({},c,o,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"runner"},"Runner"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Runner",src:t(9636).A,width:"1464",height:"321"}),"\nThe runner is a test class used to quickly test the features of your language. To create a new runner\nclass simply create a new Class within your package and extend the ",(0,a.yg)("inlineCode",{parentName:"p"},"LARFRunner")," class. Add a main\nmethod and create a version of your languages config to pass to a new instance of the LARFProcessor.\nThis is then passed to the inherited ",(0,a.yg)("inlineCode",{parentName:"p"},"run(..)")," method."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},'public class MyLanguageRunner extends LARFRunner {\n    public static void main(String[] args) {\n        MyLanguageConfig config = new IndentConfig();\n        config.setProperty(DefaultProperty.LANGUAGE_TYPED, LanguageTyped.TYPED);\n        config.setProperty(DefaultProperty.CODE_BLOCK_STYLE, CodeBlockStyle.INDENTATION_FIXED);\n        LARFProcessor processor = new LARFProcessor(config, new LARFContext());\n        run("My Language", processor);\n    }\n}\n')),(0,a.yg)("p",null,"Typically you would add the properties within your configuration class, but during the early stages of\ndevelopment it can be useful to play around with these to determine the direction you wish to head with it.\nThere are two overloaded versions of the ",(0,a.yg)("inlineCode",{parentName:"p"},"run")," method. The version above has two parameters which is the\nname of your language and the processor. The alternative to this would be one with a third parameter which\nis one or more characters to represent the end of code input. This can be useful if you want to enter\nmultiple lines or when your language uses whitespace code indentation."),(0,a.yg)("p",null,"When you run your class in the IDE, you will be presented with the following in a terminal:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"My Language Test Utility\n========================\n\n")),(0,a.yg)("p",null,"If you used the two parameter version of run, you will be able to type an expression, press enter and see\nthe result be returned on the next line:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"1 + 2 / 5\nResult: 1.4 (Type: Double, Time taken: 24ms)\n")),(0,a.yg)("p",null,"Alternatively if you chose to specify an end input character sequence e.g."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},'run("My Language", processor, ".");\n')),(0,a.yg)("p",null,"then you can keep entering new lines\nuntil that sequence is provided:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"My Language Test Utility\n========================\n[Multi-line enabled] Please add <newline> + '.' + <return> to the end of a finished expression to \n                     evaluate the result.\nint i = 1\nif i == 1 then\n    i = 2\n    if i == 2 then\n        i = 3\n        if i == 3 then\n            int j = 4\n            return i * j\n.\nResult: 12 (Type: Integer, Time taken: 24ms)\n")),(0,a.yg)("p",null,"You'll notice that when multi-line support is enabled, a message will appear stating how to correctly end\nthe expression. In this case you always need to specify the end sequence on a new line after the expression\nhas finished."),(0,a.yg)("p",null,"If you do get an error, these will be printed on the next line after evaluation instead of the result:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"[Multi-line enabled] Please add <newline> + '.' + <return> to the end of a finished expression to \n                     evaluate the result.\nint i = 1\nif i == 1 then\n    i = 2\n    if i == 2 then\n       i = 3\n        if i == 3 then\n            int j = 4\n            return i * j\n.\nError: Invalid whitespace used on line 5. Ensure code is uniformly indented using 1 tab or 4 spaces\n")),(0,a.yg)("p",null,"Certain errors are handled so that only the error is shown in the terminal. These include lexer, parser,\nindentation and unhandled operation exceptions. Anything outside of that will print the full stack trace\nas it was not expected and could represent a bug. If you do wish to print the stack traces you can enable\nthis by setting the ",(0,a.yg)("inlineCode",{parentName:"p"},"setEnableStackTrace(boolean)")," in your runner class:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},'setEnableStackTrace(true);\nrun("Indent Language", processor, ".");\n')),(0,a.yg)("p",null,"This will then print both the message and full stack trace:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"dev.larf.exception.IndentationException: Invalid whitespace used on line 5. Ensure code is uniformly \n                                         indented using 1 tab or 4 spaces\n    at dev.larf.lexer.LARFLexer.handleSpaceToken(LARFLexer.java:195)\n    at dev.larf.lexer.LARFLexer.analysePatterns(LARFLexer.java:106)\n    at dev.larf.lexer.LARFLexer.tokenize(LARFLexer.java:75)\n    at dev.larf.lexer.Lexer.tokenize(Lexer.java:49)\n    at dev.larf.processor.LARFProcessor.process(LARFProcessor.java:78)\n    at dev.larf.runner.LARFRunner.run(LARFRunner.java:51)\n    at dev.larf.runner.LARFRunner.run(LARFRunner.java:25)\n    at dev.larf.languages.indent.src.IndentRunner.main(IndentRunner.java:22)\n")))}d.isMDXComponent=!0},9636:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/runner-fd370e8e4b3df996d5507d74651d8dfc.jpg"}}]);