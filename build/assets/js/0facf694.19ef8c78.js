"use strict";(self.webpackChunklarf_site=self.webpackChunklarf_site||[]).push([[5782],{5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>g});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(t),h=a,g=d["".concat(i,".").concat(h)]||d[h]||c[h]||o;return t?r.createElement(g,s(s({ref:n},u),{},{components:t})):r.createElement(g,s({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=h;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[d]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},7962:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=t(8168),a=(t(6540),t(5680));const o={sidebar_position:4},s="SLOP: Typeless, Codeblocks",l={unversionedId:"examples/slop",id:"examples/slop",title:"SLOP: Typeless, Codeblocks",description:"SLOP",source:"@site/docs/examples/slop.md",sourceDirName:"examples",slug:"/examples/slop",permalink:"/docs/examples/slop",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/examples/slop.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Indent: Typed, Whitespace",permalink:"/docs/examples/indent"},next:{title:"My Assembly Language (MAL)",permalink:"/docs/examples/mal"}},i={},p=[{value:"Building the project",id:"building-the-project",level:3},{value:"Using the Languages Runner",id:"using-the-languages-runner",level:3},{value:"Running Examples:",id:"running-examples",level:3}],u={toc:p},d="wrapper";function c(e){let{components:n,...o}=e;return(0,a.yg)(d,(0,r.A)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"slop-typeless-codeblocks"},"SLOP: Typeless, Codeblocks"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"SLOP",src:t(1686).A,width:"1891",height:"424"}),"\nRepository: ",(0,a.yg)("a",{parentName:"p",href:"https://www.gitlab.com/tronied/larf-slop"},"https://www.gitlab.com/tronied/larf-slop")),(0,a.yg)("p",null,"This is a project that started off as a proof of concept, grew and eventually inspired me to write a framework to\ncreate other interpreted languages (LARF). That project code now depends on that framework in order to operate and\nis the most fully featured language I have created yet. As features were added to LARF during the development phase,\nthey were tested out on SLOP and added to the increasing suite of tests. This original version of this project was\npublished to Maven Central and has its own ",(0,a.yg)("a",{parentName:"p",href:"https://www.slop.dev"},"website"),". The language itself uses code-blocks and is typeless.\nIf you'd like to learn more about the syntax then please checkout out the website. This variant of the project is\nmore feature rich then the original and uses all the latest features added to LARF including error handling,\ntype support and much more."),(0,a.yg)("p",null,"I am in the process of updating the existing documentation, however I would recommend looking at the LARF documentation\nor the unit tests for the latest features and functionality."),(0,a.yg)("h3",{id:"building-the-project"},"Building the project"),(0,a.yg)("admonition",{title:"Standalone",type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"This project uses a 3rd party tool (Shadow JAR) to ensure that the Jar can be independently run.")),(0,a.yg)("p",null,"To build the project ensure you have gradle and at least Java 8+ installed. Run the command:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"gradle clean shadowJar\n")),(0,a.yg)("p",null,"This will create the projects JAR within the ",(0,a.yg)("inlineCode",{parentName:"p"},"./build/libs")," folder."),(0,a.yg)("h3",{id:"using-the-languages-runner"},"Using the Languages Runner"),(0,a.yg)("p",null,"Once the project has been built, to run the included runner class type the following:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"java -jar ./build/libs/larf-starter-0.1-all.jar\n")),(0,a.yg)("p",null,"You will then be presented with the following:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"SLOP Language Test Utility\n==========================\n[Multi-line enabled] Please add <newline> + '.' + <return> to the end of a finished expression to evaluate the result.\n\n")),(0,a.yg)("h3",{id:"running-examples"},"Running Examples:"),(0,a.yg)("p",null,"Here are some examples from the tests. This demonstrates a function which calculates fibonacci to n places:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"memMap = {};\nfunc fastFib(n) {\n    if (n <= 1) return n;\n    first = memMap.get(n - 1);\n    second = memMap.get(n - 2);\n    result = (first == null ? fastFib(n - 1) : first) + (second == null ? fastFib(n - 2) : second);\n    memMap += {n -> result};\n    return result;\n}\nreturn fastFib(47);\n.\nResult: 2971215073 (Type: BigInteger, Time taken: 293ms)\n")),(0,a.yg)("p",null,"Simple looping:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"count = 0;\nfor (i++;0;<10) {\n    if (i % 2 == 0) continue;\n    count = count + 1;\n}\nreturn count;\n.\nResult: 5 (Type: Integer, Time taken: 15ms)\n")),(0,a.yg)("p",null,"Error handling:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'type ErrorTestChild <- ErrorTestParent {\n   func errorNotHandled() {\n       return throwsError();\n   }\n}\n\ntype ErrorTestParent() {\n   func throwsError() {\n       throw new CustomUncheckedError("hello world");\n   }\n}\n\ntype CustomUncheckedError <- RunError {\n   this(message) {\n       super(message);\n   }\n}\n\nreturn new ErrorTestChild().errorNotHandled();\n.\n')),(0,a.yg)("p",null,"You will be presented with the following error:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"Unhandled RunError: hello world\n================================\nOperation: None\nSLOP Trace:\n  at ErrorTestParent.throwsError(Expression:9)\n  at ErrorTestChild.errorNotHandled(Expression:3)\n  at Default.None(Expression:19)\n\n (Type: String, Time taken: 26ms)\n")),(0,a.yg)("p",null,"The above demonstrates error handling where a RunError is thrown and propagated up through the call stack. If we\nchanged this whereby CustomUncheckedError extends a checked ",(0,a.yg)("inlineCode",{parentName:"p"},"Error"),", we would get this error:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"Unhandled Error: Checked error(s) CustomUncheckedError not caught or thrown on by Function throwsError\n=======================================================================================================\nOperation: Unknown\nSLOP Trace:\n  at ErrorTestParent.throwsError(Expression:8)\n  at ErrorTestChild.errorNotHandled(Expression:3)\n  at Default.None(Expression:19)\n\n (Type: String, Time taken: 8ms)\n")),(0,a.yg)("p",null,"These are just a few examples of the feature set available in the latest version of LARF and SLOP. To exit\nthe runner, simply type ",(0,a.yg)("inlineCode",{parentName:"p"},"exit")," and return."))}c.isMDXComponent=!0},1686:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/slop-1a9ef7f12708fb1eb307f0ea9d950f8e.jpg"}}]);